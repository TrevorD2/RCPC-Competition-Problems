Name: Bill's Cipher

Difficulty: Hard

Problem: 
Bill Cipher, your favorite murderous triangle, is trying to hide the secrets of armageddon using an equally triangular cipher.
Given the cipher text, decode to plaintext. The rules used to ENCODE the text are listed below.

1. Remove all trailing and leading spaces/indentation. If the message has an odd length, add a space to the end of it.

2. Convert each character to an integer by 
    A. 0-indexing it on the string " qwertyuiopasdfghjklzxcvbnm" B. Adding 5 C. Adding 30 for capital letters 
    Note: Spaces are to be treated as index 26

3. Group each number into integer pairs. The first of each pair will be the height and the second will be the base of an equilateral triangle.
   Now, create a new pairs using the triangle's perimeter and twice its area.

4. Flatten your list of pairs and convert each number to hexadecimal. Make sure to include leading 0's to make it total 3 hexadecimal places.

5. Construct each individual hex digit into the shape of continuously larger right triangles separated by a blank line (2 newline characters).
   The first triangle will be a 2x2, then a 3x3, etc. If you run out of characters to print from the original, print #'s
   ex.
   A 
   AB

   C
   DE
   FGH

   ...


Find a right triangle with integer base and height to make into to into a right triangle


Input:
ciphertext: string

Constraints:
0 <= ciphertext <= 1000 chars

Output:
plaintext: integer

Tags:
String-Parse, Math