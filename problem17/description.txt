Name: Bill's Cipher

Difficulty: Hard
Points: 10

Problem: 
Bill Cipher, your favorite murderous triangle, is trying to hide the secrets of armageddon using an equally triangular cipher.
Given the cipher text, you must reverse this cipher in order to DECODE to plaintext. The rules used to ENCODE the text are listed below.

1. Remove all trailing and leading spaces/indentation. If the message has an odd length, add a space to the end of it.

2. Convert each character to an integer by 
   A. 0-indexing it on the string " qwertyuiopasdfghjklzxcvbnm.,!?'" 
   B. Adding 5 
   C. Adding 31 for capital letters 

3. Group each number into integer pairs. 
   A. The first of each pair will be the height and the second will be the base of an equilateral triangle. (h, b)
   B. Now, create new pairs using each triangle's perimeter and twice its area. (3*P, 2*A)

4. Flatten your list of pairs into a 1d array and convert each number to hexadecimal. Include leading 0's to make it total 3 hexadecimal places.

5. Construct each individual hex digit into the shape of continuously larger right triangles separated by a blank line (2 newline characters). The first triangle will be a 2x2, then a 3x3, etc. If you run out of characters to print from the original, print #'s
   ex.
   A 
   AB

   C
   DE
   F##


Input:
ciphertext: string

Constraints:
0 <= ciphertext <= 6000 chars

Output:
plaintext: string

Tags:
String-Parse, Math